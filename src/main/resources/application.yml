server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /user-service
spring:
  application:
    name: user-service
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/user_service}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  flyway:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/user_service}
    schemas: public
    user: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BROKERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
jwt:
  secret: ${JWT_SECRET:jwtSecret}
  expiration: 86400000
aws:
  access-key-id: ${S3_ACCESS_KEY_ID}
  secret-access-key: ${S3_SECRET_ACCESS_KEY}
  s3:
    region: eu-central-1
    bucket-name: ${S3_BUCKET_NAME:smart-health-s3}
    profile-pictures-folder: ${S3_PROFILE_PICTURE_FOLDER:user-service-local/profile-pictures/}
kafka:
  topic:
    new-patients: user-service-new-patients